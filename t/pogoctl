#!/usr/bin/env perl
# Copyright (c) 2010-2011 Yahoo! Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

use 5.008;
use common::sense;

use Fcntl;
use FindBin qw($Bin);
use Log::Log4perl qw(:easy);
Log::Log4perl::easy_init($DEBUG);

use lib "$Bin/../lib";
use lib "$Bin/../t/lib";

use PogoTester;

sub start
{
  $ENV{POGO_PERSIST} = 1;
  write_pidfile( 'zookeeper', PogoTester::start_zookeeper() );
  write_pidfile( 'dispatcher', PogoTester::start_dispatcher() );
  write_pidfile( 'worker', PogoTester::start_worker() );
}

sub stop
{
  killit('worker');
  killit('dispatcher');
  killit('zookeeper');
}

sub killit
{
  my ($name) = @_;
  my $pid = read_pidfile($name);
  if ( ! defined $pid ) {
      DEBUG "no pid file for $name, assuming stopped already";
      return;
  }
  DEBUG "killing $name ($pid)";
  kill 15, $pid;
  unlink_pidfile($name);
}


sub restart
{
  stop();
  start();
}

sub write_pidfile
{
  my ($name, $pid) = @_;
  sysopen( my $fh, "/tmp/$name.pid", O_CREAT|O_EXCL|O_WRONLY )
    or die "Can't open pid file: $!";
  print $fh $pid;
  close($fh);
}

sub read_pidfile
{
  my ($name) = @_;
  return unless ( -R "/tmp/$name.pid" );
  open my $fh, '<', "/tmp/$name.pid"
    or die "Can't open '/tmp/$name.pid': $!";
  local $/;
  my $pid = <$fh>;
  close $fh;
  return $pid;
}

sub unlink_pidfile
{
  my ($name) = @_;
  unlink("/tmp/$name.pid")
    or die "can't unlink pid file: $!";
}

sub main
{
  if ($ARGV[0] eq 'start')
  {
    start();
    return 0;
  }
  elsif ($ARGV[0] eq 'stop')
  {
    stop();
    return 0;
  }
  elsif ($ARGV[0] eq 'restart')
  {
    restart();
    return 0;
  }

  print "what?";
}

exit &main;

1;

=pod

=head1 NAME

  CLASSNAME - SHORT DESCRIPTION

=head1 SYNOPSIS

CODE GOES HERE

=head1 DESCRIPTION

LONG_DESCRIPTION

=head1 METHODS

B<methodexample>

=over 2

methoddescription

=back

=head1 SEE ALSO

L<Pogo::Dispatcher>

=head1 COPYRIGHT

Apache 2.0

=head1 AUTHORS

  Andrew Sloane <andy@a1k0n.net>
  Michael Fischer <michael+pogo@dynamine.net>
  Mike Schilli <m@perlmeister.com>
  Nicholas Harteau <nrh@hep.cat>
  Nick Purvis <nep@noisetu.be>
  Robert Phan <robert.phan@gmail.com>

=cut

# vim:syn=perl:sw=2:ts=2:sts=2:et:fdm=marker
